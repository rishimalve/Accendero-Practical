[{"/Users/rishimalve/Documents/projects/Accendero-Practical/fronend/src/index.js":"1","/Users/rishimalve/Documents/projects/Accendero-Practical/fronend/src/App.js":"2","/Users/rishimalve/Documents/projects/Accendero-Practical/fronend/src/reportWebVitals.js":"3","/Users/rishimalve/Documents/projects/Accendero-Practical/fronend/src/nav-bar.js":"4","/Users/rishimalve/Documents/projects/Accendero-Practical/fronend/src/components/reg.js":"5","/Users/rishimalve/Documents/projects/Accendero-Practical/fronend/src/components/login.js":"6","/Users/rishimalve/Documents/projects/Accendero-Practical/fronend/src/components/landingPage.js":"7","/Users/rishimalve/Documents/projects/Accendero-Practical/fronend/src/components/moodCheck.js":"8","/Users/rishimalve/Documents/projects/Accendero-Practical/fronend/src/components/history.js":"9"},{"size":479,"mtime":1611441318000,"results":"10","hashOfConfig":"11"},{"size":1107,"mtime":1611690670072,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":998,"mtime":1611690559543,"results":"14","hashOfConfig":"11"},{"size":1522,"mtime":1611691297934,"results":"15","hashOfConfig":"11"},{"size":1688,"mtime":1611720732664,"results":"16","hashOfConfig":"11"},{"size":848,"mtime":1611691362909,"results":"17","hashOfConfig":"11"},{"size":2159,"mtime":1611706160957,"results":"18","hashOfConfig":"11"},{"size":1882,"mtime":1611691348362,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1r34jep",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"/Users/rishimalve/Documents/projects/Accendero-Practical/fronend/src/index.js",[],["42","43"],"/Users/rishimalve/Documents/projects/Accendero-Practical/fronend/src/App.js",[],"/Users/rishimalve/Documents/projects/Accendero-Practical/fronend/src/reportWebVitals.js",[],"/Users/rishimalve/Documents/projects/Accendero-Practical/fronend/src/nav-bar.js",[],"/Users/rishimalve/Documents/projects/Accendero-Practical/fronend/src/components/reg.js",[],"/Users/rishimalve/Documents/projects/Accendero-Practical/fronend/src/components/login.js",[],"/Users/rishimalve/Documents/projects/Accendero-Practical/fronend/src/components/landingPage.js",["44"],"import React, {useEffect} from 'react'\nimport { Link, navigate } from '@reach/router'\n\nconst LandingPage = props => {\n\n    useEffect(() => {\n        if(props.userState['isLoggedIn']) {\n            props.setUserState({ ...props.userState ,isLoggedIn: false, id: null });\n            navigate('/moodCheck');\n        }\n    }, []);\n\n    return (\n        <div className=\"medium-container\">\n            <div className=\"d-flex flex-column min-vh-100 justify-content-center\">\n                <Link to=\"/login\">\n                    <button className=\"btn btn-primary btn-lg btn-block\">Login</button><br />\n                </Link>\n                <Link to=\"/registration\">\n                    <button className=\"btn btn-primary btn-lg btn-block\">Register</button>\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default LandingPage;","/Users/rishimalve/Documents/projects/Accendero-Practical/fronend/src/components/moodCheck.js",["45"],"import { navigate } from \"@reach/router\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../primitive.css\";\n\nconst MoodCheck = props => {\n\n    const initialState = {\n        message: '',\n        id: null,\n        polarity: null\n    }\n\n    const [message, setMessage] = useState(initialState)\n\n    const handleChange = event => {\n        const { name, value } = event.target\n        setMessage({ ...message, [name]: value })\n    }\n\n    useEffect(() => {\n        setMessage({...message, id : props.userState['id']});\n        if(!props.userState['isLoggedIn']) {\n            navigate('/login');\n        }\n    }, []);\n\n    const submitForm = (event) => {\n        event.preventDefault();\n        setMessage({id : props.userState['id']});\n\n        axios.post(\"http://localhost:5000/api/calculateSentiment\", message, {withCredentials : true}).then(res => {\n            if (res.status === 201) {\n                if (res.data['pos'] > res.data['neg']) {\n                    setMessage({ ...message, polarity: 1 });\n                    window.alert(\"You are thinking positive!\");\n                }\n                else {\n                    setMessage({ ...message, polarity: 0 });\n                    window.alert(\"You are thinking negative!\");\n                }\n            }\n        });\n    }\n\n    // const renderElement = () => {\n    //     if(message.polarity === 1 )\n    //         return <button type=\"button\">You are thinking poitive!</button>\n    //     return <button type=\"button\">You are thinking negative!</button>\n    // }\n\n    return (\n        <div className=\"medium-container\">\n            <div className=\"d-flex flex-column min-vh-100 justify-content-center\">\n                <form onSubmit={submitForm}>\n                    <input type=\"text\" name=\"message\" placeholder=\"what's on your mind?\" id=\"message\" value={message.message} onChange={handleChange} required />\n                    <button type=\"submit\" className=\"button full-button\">Check My Mood!</button>&nbsp;&nbsp;&nbsp;\n                </form>\n            </div>\n            {/* {renderElement()} */}\n        </div>\n    )\n}\n\nexport default MoodCheck\n","/Users/rishimalve/Documents/projects/Accendero-Practical/fronend/src/components/history.js",["46"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { navigate } from \"@reach/router\";\n\nconst History = props => {\n\n    const initialState = {\n        id: props.userState['id'],\n        response: null\n    }\n\n    const [state, setstate] = useState(initialState)\n\n    useEffect(() => {\n        if(!props.userState['isLoggedIn']) {\n            navigate('/login');\n        }\n        axios.get(`http://localhost:5000/api/history`, { params: { id: props.userState['id'] } }, { withCredentials: true }).then(res => {\n            setstate({ ...state, response: res.data });\n        });\n    }, []);\n\n\n    if (state.response) {\n        return (\n            <div className=\"medium-container\">\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Message</th>\n                            <th>Date</th>\n                            <th>Mood</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {state.response.map((row, index) => {\n                            return (\n                                <tr key={index}>\n                                    <td>{row.message}</td>\n                                    <td>{row.date}</td>\n                                    <td>{row.polarity}</td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n    else {\n        return (\n            <div>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Message</th>\n                            <th>Date</th>\n                        </tr>\n                    </thead>\n                </table>\n            </div>\n        )\n    }\n\n}\n\nexport default History;\n",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":11,"column":8,"nodeType":"53","endLine":11,"endColumn":10,"suggestions":"54"},{"ruleId":"51","severity":1,"message":"55","line":26,"column":8,"nodeType":"53","endLine":26,"endColumn":10,"suggestions":"56"},{"ruleId":"51","severity":1,"message":"57","line":21,"column":8,"nodeType":"53","endLine":21,"endColumn":10,"suggestions":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["61"],"React Hook useEffect has missing dependencies: 'message' and 'props.userState'. Either include them or remove the dependency array. You can also do a functional update 'setMessage(m => ...)' if you only need 'message' in the 'setMessage' call.",["62"],"React Hook useEffect has missing dependencies: 'props.userState' and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setstate(s => ...)' if you only need 'state' in the 'setstate' call.",["63"],"no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},{"desc":"66","fix":"67"},{"desc":"68","fix":"69"},"Update the dependencies array to be: [props]",{"range":"70","text":"71"},"Update the dependencies array to be: [message, props.userState]",{"range":"72","text":"73"},"Update the dependencies array to be: [props.userState, state]",{"range":"74","text":"75"},[323,325],"[props]",[649,651],"[message, props.userState]",[619,621],"[props.userState, state]"]